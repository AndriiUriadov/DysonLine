#!/usr/bin/env python3
"""
–ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É DysonianLineCNN
"""

import sys
import os

# –î–æ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ —à–ª—è—Ö—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from data_loader import load_and_prepare_data
from train import train_and_evaluate
from evaluate import evaluate_model
from utils import print_system_info, create_experiment_log
from config import TRAINING_CONFIG, MODEL_CONFIG, LOSS_WEIGHTS


def main():
    """
    –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –ø–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª—É –Ω–∞–≤—á–∞–Ω–Ω—è
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ DysonianLineCNN...")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–∏—Å—Ç–µ–º—É
    print("\n=== –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–∏ ===")
    system_info = print_system_info()
    
    # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–ª—è—î–º–æ –¥–∞–Ω—ñ
    print("\n=== –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö ===")
    data_dict = load_and_prepare_data()
    
    # –ù–∞–≤—á–∞—î–º–æ –º–æ–¥–µ–ª—å
    print("\n=== –ù–∞–≤—á–∞–Ω–Ω—è –º–æ–¥–µ–ª—ñ ===")
    model, history = train_and_evaluate(data_dict)
    
    # –û—Ü—ñ–Ω—é—î–º–æ –º–æ–¥–µ–ª—å
    print("\n=== –û—Ü—ñ–Ω–∫–∞ –º–æ–¥–µ–ª—ñ ===")
    metrics = evaluate_model(
        model, 
        data_dict['X_test'], 
        data_dict['y_test'], 
        data_dict['y_min'], 
        data_dict['y_max']
    )
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ª–æ–≥ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É
    print("\n=== –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ ===")
    config_dict = {
        'training_config': TRAINING_CONFIG,
        'model_config': MODEL_CONFIG,
        'loss_weights': LOSS_WEIGHTS,
        'system_info': system_info
    }
    
    create_experiment_log(
        experiment_name="dysonian_line_cnn_local",
        config_dict=config_dict,
        metrics_dict=metrics
    )
    
    print("\n‚úÖ –ï–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –ª–æ–≥ —Ñ–∞–π–ª—ñ")
    print(f"üíæ –ú–æ–¥–µ–ª—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ —è–∫: {model.name}")


if __name__ == "__main__":
    main() 